package myapp;

import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Set;
import java.util.concurrent.ConcurrentHashMap;

import com.fasterxml.jackson.databind.ObjectMapper;

public class Registered {
	private String file;
	private ConcurrentHashMap<String,User> registered;
	
	public Registered(){
		this.registered = new ConcurrentHashMap<String,User>();
	}
	public Registered(String file){
		this.file =file;
		this.registered = new ConcurrentHashMap<String,User>();
	}
	
	@SuppressWarnings("unchecked")
	public synchronized void backupUsers() throws IOException{
		File fich = new File(file);
		if(fich.exists()){
			ObjectMapper om = new ObjectMapper();
			registered = om.readValue(fich, ConcurrentHashMap.class);
		}
	}
	public synchronized void addRequester(String mail, String regId){
		User user = registered.get(mail);
		if(user!=null){
			user.addRequesterId(regId);
		}else{
			user = new User();
			user.addRequesterId(regId);
			registered.put(mail, user);
		}
	}
	public String getFile() {
		return file;
	}
	public void setFile(String file) {
		this.file = file;
	}
	public ConcurrentHashMap<String, User> getRegistered() {
		return registered;
	}
	public void setRegistered(ConcurrentHashMap<String, User> registered) {
		this.registered = registered;
	}
	public synchronized int getNUsers(){
		return registered.size();
	}
}
